@using System
@using System.Data
@using System.Data.SqlClient
@using System.Configuration
@using System.Collections
@using DomainModel
@using DomainModel.Controls
@using DATA0200025
@using APP0200025.App_Code
@using APP0200025.Models
@using APP0200025.Controllers
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    String ServerURL = CHamRieng.Get_Domain();
    String sDate = DateTime.Now.ToString("dd/MM/yyyy");
    String ParentID = "Index";

    int iID_MaNgonNgu = 1;
    if (Session["LANGUAGECODE"] == null || Convert.ToString(Session["LANGUAGECODE"]) == "")
    {
        Session["LANGUAGEID"] = 1;
        Session["LANGUAGECODE"] = "vn";
    }
    else
    {
        iID_MaNgonNgu = Convert.ToInt32(Session["LANGUAGEID"]);
    }
    Hashtable Lang = NgonNgu.GetLanguage(Convert.ToString(Session["LANGUAGECODE"]), Server.MapPath("~/XML/" + Session["LANGUAGECODE"] + ".xml"), "pageApp");


    int MaDonViCuaNhomNguoiDung = HamRiengModels.MaDonViCuaNhomNguoiDung(User.Identity.Name);
    String MaBangMau = Convert.ToString(ViewData["MaBangMau"]);
    String MaPhongBan = Convert.ToString(ViewData["MaPhongBan"]);
    Boolean ChiCoQuyenDoc = false;//= Convert.ToBoolean(ViewData["ChiCoQuyenDoc"]);

    int MaHangMauCha = 0;

    if (CommonFunction.IsNumeric(Request.QueryString["MaHangMauCha"]))
    {
        MaHangMauCha = Convert.ToInt32(Request.QueryString["MaHangMauCha"]);
    }

    String DanhSachChucNangCam_Cot = BaoMat.DanhSachChucNangCam(User.Identity.Name, "tb_Cot");
    String strPath = CString.strServerURL(Request.Url.AbsoluteUri);

    if (ChiCoQuyenDoc)
    {
        DanhSachChucNangCam_Cot += ",Edit,Delete,";
    }

    SqlCommand cmd;
    cmd = new SqlCommand("SELECT * FROM BC_BangMau WHERE iID_MaBangMau=@iID_MaBangMau");
    cmd.Parameters.AddWithValue("@iID_MaBangMau", MaBangMau);
    DataTable dtBangMau = Connection.GetDataTable(cmd);
    cmd.Dispose();
    String TenBang = Convert.ToString(dtBangMau.Rows[0]["sTenBang"]);
    int MaHangMauGoc = Convert.ToInt32(dtBangMau.Rows[0]["iID_MaHangMauGoc"]);
    if (MaHangMauCha == 0)
    {
        MaHangMauCha = MaHangMauGoc;
    }

    String XauMaHangMauHienThi = ",", XauMaHangMauThuocNhanh = ",";
    BangModels.XacDinhDanhSachCacMaHangSeHienThi(MaBangMau, MaHangMauCha, ref XauMaHangMauHienThi, ref XauMaHangMauThuocNhanh);
    int LoaiBaoCao = Convert.ToInt16(dtBangMau.Rows[0]["iLoaiBaoCao"]);

    cmd = new SqlCommand();
    cmd.CommandText = "SELECT * " +
                      "FROM BC_BangMau_CotMau " +
                      "WHERE iID_MaBangMau=@iID_MaBangMau ORDER BY iSTT;";
    cmd.Parameters.AddWithValue("@iID_MaBangMau", MaBangMau);
    DataTable dtCotMau = Connection.GetDataTable(cmd);
    cmd.Dispose();

    cmd = new SqlCommand();
    cmd.CommandText = "SELECT * FROM BC_HangMau ORDER BY iSTT";
    DataTable dtHangMau = Connection.GetDataTable(cmd);
    cmd.Dispose();

    cmd = new SqlCommand();
    cmd.CommandText = "SELECT * " +
                      " FROM BC_BangMau_CongThuc " +
                      " WHERE (iID_MaBangMau=@iID_MaBangMau) ";
    cmd.Parameters.AddWithValue("@iID_MaBangMau", MaBangMau);
    DataTable dtCongThuc = Connection.GetDataTable(cmd);
    cmd.Dispose();

    cmd = new SqlCommand();
    cmd.CommandText = "SELECT tbl1.iID_MaHangMau_Cha AS MaHangMauChaThat, tbl2.* " +
                        "FROM BC_BangMau_HangMau AS tbl1 INNER JOIN BC_HangMau AS tbl2 ON tbl1.iID_MaHangMau = tbl2.iID_MaHangMau " +
                        "WHERE tbl1.iID_MaBangMau=@iID_MaBangMau";
    cmd.Parameters.AddWithValue("@iID_MaBangMau", MaBangMau);
    DataTable dtBangMau_HangMau = Connection.GetDataTable(cmd);
    cmd.Dispose();
    List<int> arrSTT = new List<int>();



    int i, j, h, c;
    string MaHangMau, MaCotMau;

    for (i = 0; i < dtBangMau_HangMau.Rows.Count; i++)
    {
        dtBangMau_HangMau.Rows[i]["iID_MaHangMau_Cha"] = dtBangMau_HangMau.Rows[i]["MaHangMauChaThat"];
    }
    BangMauHangMauModels.TaoMangSTT(dtHangMau, dtBangMau_HangMau, MaBangMau, 0, 0, ref arrSTT);

    List<Boolean> arrCotChiDoc = new List<Boolean>();
    List<Boolean> arrHangChiDoc = new List<Boolean>();
    Boolean ChiDoc = false;

    String MaNhomNguoiDung = BaoMat.LayMaNhomNguoiDung(User.Identity.Name);
    Boolean isAdmin = BaoMat.KiemTraNhomNguoiDungQuanTri(MaNhomNguoiDung);
    //String strLoaiNguoiDuocSua;

    for (i = 0; i <= dtCotMau.Rows.Count - 1; i++)
    {
        ChiDoc = false;
        if (ChiCoQuyenDoc)
        {
            ChiDoc = true;
        }
        arrCotChiDoc.Add(ChiDoc);
    }

    //Xác định độ rộng của bảng
    //Xác định các cột chỉ đọc
    //Xác định độ rộng cột
    List<int> arrColWidth = new List<int>();
    int nColWidth = 2;
    arrColWidth.Add(30);
    arrColWidth.Add(150);
    for (j = 0; j < dtCotMau.Rows.Count; j++)
    {
        arrColWidth.Add(0);
        if (CommonFunction.IsNumeric(dtCotMau.Rows[j]["sWidth"]))
        {
            arrColWidth[nColWidth + j] = Convert.ToInt16(dtCotMau.Rows[j]["sWidth"]);
        }
        else
        {
            arrColWidth[nColWidth + j] = 100;
        }
        if (String.IsNullOrEmpty(Convert.ToString(dtCotMau.Rows[j]["sCongThuc"])) == false)
        {
            arrCotChiDoc[j] = true;
        }
    }
    int DoRongBang = 0;
    for (j = 0; j < arrColWidth.Count; j++)
    {
        DoRongBang += arrColWidth[j];
    }


    String XauMaCacHang = "", XauMaCacCot = "";
    String Hang1 = "", Hang2 = "", Hang3 = "", Hang4 = "", tg;
    int MocH1 = -1, MocH2 = -1;
    Boolean CoH1, CoH2;
    int d;

    //Xác định kiểu dữ liệu của cả bảng
    List<List<int>> arrKieuO = new List<List<int>>();
    cmd = new SqlCommand();
    cmd.CommandText = "SELECT * " +
                      "FROM BC_BangMau_DinhDang " +
                      "WHERE iID_MaBangMau=@iID_MaBangMau " +
                      "ORDER BY iID_MaHangMau;";
    cmd.Parameters.AddWithValue("@iID_MaBangMau", MaBangMau);
    DataTable dtDinhDang = Connection.GetDataTable(cmd);
    cmd.Dispose();
    String XauKieuDuLieu = "", XauSoSauDauPhay = "";
    List<List<String>> D = new List<List<String>>();
    for (i = 0; i <= dtBangMau_HangMau.Rows.Count - 1; i++)
    {
        arrKieuO.Add(new List<int>());
        D.Add(new List<string>());
    }
    for (i = 0; i <= dtBangMau_HangMau.Rows.Count - 1; i++)
    {
        h = arrSTT[i];
        if (h > 0)
        {
            XauKieuDuLieu += BangModels.DauCachHang;
            XauSoSauDauPhay += BangModels.DauCachHang;
        }
        Boolean ddDaCoDuLieu = false;
        int hDinhDang0 = 0;
        for (j = 0; j < dtDinhDang.Rows.Count; j++)
        {
            if (Convert.ToInt64(dtBangMau_HangMau.Rows[h]["iID_MaHangMau"]) == Convert.ToInt64(dtDinhDang.Rows[j]["iID_MaHangMau"]))
            {
                hDinhDang0 = j;
                break;
            }
        }
        for (c = 0; c <= dtCotMau.Rows.Count - 1; c++)
        {
            if (ddDaCoDuLieu)
            {
                XauKieuDuLieu += BangModels.DauCachO;
                XauSoSauDauPhay += BangModels.DauCachO;
            }
            ddDaCoDuLieu = true;
            int tgKieuDuLieu = Convert.ToInt32(dtCotMau.Rows[c]["iKieuDuLieu"]);
            int tgSoSauDauPhay = Convert.ToInt32(dtCotMau.Rows[c]["iSoSauDauPhay"]);
            String tgBackGround = "";
            String tgColor = "";
            int? tgAlignment = null;
            int? tgFontSize = null;
            Boolean? tgBold = null;
            Boolean? tgItalic = null;
            Boolean? tgUnderline = null;
            for (j = hDinhDang0; j < dtDinhDang.Rows.Count; j++)
            {
                if (Convert.ToInt64(dtCotMau.Rows[c]["iID_MaCotMau"]) == Convert.ToInt64(dtDinhDang.Rows[j]["iID_MaCotMau"]) &&
                    Convert.ToInt64(dtBangMau_HangMau.Rows[h]["iID_MaHangMau"]) == Convert.ToInt64(dtDinhDang.Rows[j]["iID_MaHangMau"]))
                {
                    if (dtDinhDang.Rows[j]["bBold"] != DBNull.Value) { tgBold = Convert.ToBoolean(dtDinhDang.Rows[j]["bBold"]); }
                    if (dtDinhDang.Rows[j]["bItalic"] != DBNull.Value) { tgItalic = Convert.ToBoolean(dtDinhDang.Rows[j]["bItalic"]); }
                    if (dtDinhDang.Rows[j]["bUnderline"] != DBNull.Value) { tgUnderline = Convert.ToBoolean(dtDinhDang.Rows[j]["bUnderline"]); }
                    if (dtDinhDang.Rows[j]["iAlignment"] != DBNull.Value) { tgAlignment = Convert.ToInt16(dtDinhDang.Rows[j]["iAlignment"]); }
                    if (dtDinhDang.Rows[j]["iFontSize"] != DBNull.Value) { tgFontSize = Convert.ToInt16(dtDinhDang.Rows[j]["iFontSize"]); }
                    if (dtDinhDang.Rows[j]["sBackGround"] != DBNull.Value) { tgBackGround = Convert.ToString(dtDinhDang.Rows[j]["sBackGround"]); }
                    if (dtDinhDang.Rows[j]["sColor"] != DBNull.Value) { tgColor = Convert.ToString(dtDinhDang.Rows[j]["sColor"]); }
                    if (dtDinhDang.Rows[j]["iKieuDuLieu"] != DBNull.Value) { tgKieuDuLieu = Convert.ToInt16(dtDinhDang.Rows[j]["iKieuDuLieu"]); }
                    if (dtDinhDang.Rows[j]["iSoSauDauPhay"] != DBNull.Value) { tgSoSauDauPhay = Convert.ToInt16(dtDinhDang.Rows[j]["iSoSauDauPhay"]); }
                    break;
                }
            }
            arrKieuO[h].Add(tgKieuDuLieu);
            XauKieuDuLieu += Convert.ToString(tgKieuDuLieu);
            XauSoSauDauPhay += Convert.ToString(tgSoSauDauPhay);
            if (tgAlignment == null)
            {
                switch (Convert.ToInt16(tgKieuDuLieu))
                {
                    case 1:
                        //Kiểu số
                        tgAlignment = 1;
                        break;
                }
            }
            String strDinhDang = "";
            if (tgAlignment != null)
            {
                if (tgAlignment.Value == 1)
                {
                    strDinhDang += "text-align:right;";
                }
                else if (tgAlignment.Value == 2)
                {
                    strDinhDang += "text-align:center;";
                }
            }
            if (tgBackGround != "")
            {
                strDinhDang += String.Format("background-color:{0};", tgBackGround);
            }
            if (tgColor != "")
            {
                strDinhDang += String.Format("color:{0};", tgColor);
            }
            if (tgFontSize != null)
            {
                strDinhDang += String.Format("font-size:{0}px;", tgFontSize.Value);
            }
            if (tgBold != null)
            {
                if (tgBold.Value)
                {
                    strDinhDang += "font-weight:bold;";
                }
                else
                {
                    strDinhDang += "font-weight:normal;";
                }
            }
            if (tgItalic != null)
            {
                if (tgItalic.Value)
                {
                    strDinhDang += "font-style:italic;";
                }
                else
                {
                    strDinhDang += "font-style:normal;";
                }
            }
            if (strDinhDang != "")
            {
                strDinhDang = String.Format(" style='{0}' ", strDinhDang);
            }
            D[h].Add(strDinhDang);
        }
    }


    //Tạo danh sách dấu cách của cây
    List<String> arrXauDauCach = new List<string>();
    String XauDauCach = "&nbsp;&nbsp;";
    int cs1, cs2;

    for (i = 0; i < dtBangMau_HangMau.Rows.Count; i++)
    {
        arrXauDauCach.Add("");
        cs1 = arrSTT[i];
        if (Convert.ToInt64(dtBangMau_HangMau.Rows[cs1]["iID_MaHangMau_Cha"]) > 0)
        {
            for (j = 0; j < i; j++)
            {
                cs2 = arrSTT[j];
                if (Convert.ToInt64(dtBangMau_HangMau.Rows[cs1]["iID_MaHangMau_Cha"]) == Convert.ToInt64(dtBangMau_HangMau.Rows[cs2]["iID_MaHangMau"]))
                {
                    arrXauDauCach[i] = arrXauDauCach[j] + XauDauCach;
                    break;
                }
            }
        }
    }

    for (j = 0; j <= dtCotMau.Rows.Count - 1; j++)
    {
        if (XauMaCacCot != "") { XauMaCacCot += ","; }
        XauMaCacCot += Convert.ToString(dtCotMau.Rows[j]["iID_MaCotMau"]);
    }

    for (i = 0; i <= dtBangMau_HangMau.Rows.Count - 1; i++)
    {
        cs1 = arrSTT[i];
        if (Convert.ToString(dtBangMau_HangMau.Rows[cs1]["sCongThuc"]) != "" || Convert.ToBoolean(dtBangMau_HangMau.Rows[cs1]["bTongHangCon"]))
        {
            arrHangChiDoc.Add(true);
        }
        else
        {
            arrHangChiDoc.Add(true);
        }
    }

    //Điền dữ liệu vào ô
    String XauMucCuaHang = "", XauGiaTriChiTiet = "";
    Boolean ReadOnly, ODau;
    int nH = -1, nC = 0;
    String sValue;
    for (i = 0; i <= dtBangMau_HangMau.Rows.Count - 1; i++)
    {
        cs1 = arrSTT[i];
        MaHangMau = String.Format("{0}", dtBangMau_HangMau.Rows[cs1]["iID_MaHangMau"]);
        if (XauMaCacHang != "") { XauMaCacHang += ","; }
        XauMaCacHang += Convert.ToString(dtBangMau_HangMau.Rows[cs1]["iID_MaHangMau"]);

        if (XauGiaTriChiTiet != "")
        {
            XauGiaTriChiTiet += BangModels.DauCachHang;
        }

        nH++;
        ODau = true;

        for (j = 0; j <= dtCotMau.Rows.Count - 1; j++)
        {
            sValue = "";
            MaCotMau = Convert.ToString(dtCotMau.Rows[j]["iID_MaCotMau"]);
            if (ODau == false)
            {
                XauGiaTriChiTiet += BangModels.DauCachO;
            }
            ODau = false;
            //Lấy giá trị đã ghi
            sValue = "Text";
            switch (arrKieuO[cs1][j])
            {
                case 1:
                    sValue = "1234.567890";
                    break;
                case 4:
                case 5:
                    sValue = "2001:12:31:14:25:30";
                    break;
            }
            XauGiaTriChiTiet += sValue;
        }
    }


    //4 Hàng tiêu đề
    d = 0;
    for (i = 0; i <= dtCotMau.Rows.Count - 1; i++)
    {
        nC++;
        CoH1 = false;
        CoH2 = false;
        if (i <= MocH1)
        {
            CoH1 = true;
        }
        if (i > MocH2 && Convert.ToBoolean(dtCotMau.Rows[i]["bNhomCon"]))
        {
            CoH2 = true;
            d = 1;
            for (j = i + 1; j <= dtCotMau.Rows.Count - 1; j++)
            {
                if (Convert.ToBoolean(dtCotMau.Rows[j]["bNhomCon"]) && Convert.ToString(dtCotMau.Rows[i]["sTenNhomCon"]) == Convert.ToString(dtCotMau.Rows[j]["sTenNhomCon"]))
                {
                    d = d + 1;
                    MocH2 = j;
                }
            }
            if (CoH1)
            {
                Hang2 += String.Format("<th align='center' colspan='{0}'><b>{1}</b></th>",
                                        d, dtCotMau.Rows[i]["sTenNhomCon"]);
            }
            else
            {
                Hang1 += String.Format("<th align='center' colspan='{0}' rowspan='2'><b>{1}</b></th>",
                                        d, dtCotMau.Rows[i]["sTenNhomCon"]);
            }
        }
        else if (i <= MocH2)
        {
            CoH2 = true;
        }
        d = 1;
        if (CoH2 == false)
        {
            if (CoH1 == false)
            {
                d = 3;

                Hang1 += String.Format("<th width='{0}px' align='center' rowspan='{1}'><b>{2}</b></th>",
                                arrColWidth[nColWidth + i],
                                d,
                                dtCotMau.Rows[i]["sTenCot"].ToString());
            }
            else
            {
                d = 2;
                Hang2 += String.Format("<th width='{0}px' align='center' rowspan='{1}'><b>{2}</b></th>",
                            arrColWidth[nColWidth + i],
                            d,
                            dtCotMau.Rows[i]["sTenCot"].ToString());
            }
        }
        else
        {
            Hang3 += String.Format("<th width='{0}px' align='center' rowspan='{1}'><b>{2}</b></th>",
                        arrColWidth[nColWidth + i],
                        d,
                        dtCotMau.Rows[i]["sTenCot"].ToString());
        }
        Hang4 += String.Format("<th align='center' ><b>[C{0}]</b></th>", dtCotMau.Rows[i]["iID_MaCotMau"]);
    }

    cmd = new SqlCommand();
    cmd.CommandText = "SELECT iID_MaDonVi, sTenVietTat " +
                      "FROM BC_DonVi " +
                      "ORDER BY iSTT;";
    DataTable dtDonVi = Connection.GetDataTable(cmd);
    cmd.Dispose();
}

<script src="@(Url.Content("~/Scripts/jquery.fixedtableheader.min.js"))"></script>
<script src="@Url.Content("~/Scripts/jquery.jeditable.js")?id=@DateTime.Now.ToString("YYYYMMddHHmmss")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/KeyTable.js")?id=@DateTime.Now.ToString("YYYYMMddHHmmss")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Bang.js")?id=@DateTime.Now.ToString("YYYYMMddHHmmss")" type="text/javascript"></script>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">@(TenBang.ToUpper()) &nbsp;&nbsp; <span style="color:Red">MÃ BẢNG:&nbsp;[@(MaBangMau)]</span></h3>
                    <div class="box-tools">
                        <ul class="pagination pagination-sm no-margin pull-right">
                            <li><a href="#" onclick="javascript:history.go(-1)"><i class="fa fa-reply-all"></i> Quay lại</a></li>
                        </ul>
                    </div>
                </div><!-- /.box-header -->
                <div class="box-body no-padding">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped">
                            <tr>
                                <th>DANH SÁCH ĐƠN VỊ:&nbsp;</th>
                                @{
                                    for (i = 0; i <= dtDonVi.Rows.Count - 1; i++)
                                    {
                                        <th><span style="color: Red"><b>[D@(Convert.ToString(dtDonVi.Rows[i]["iID_MaDonVi"]))]</b></span>&nbsp;&nbsp;<span>@(Convert.ToString(dtDonVi.Rows[i]["sTenVietTat"]))</span></th>
                                    }
                                    dtDonVi.Dispose();
                                }
                            </tr>
                        </table>
                        <table id="BangDuLieu" cellpadding="0" cellspacing="0" border="0" width="@(DoRongBang)px" class="display KeyTable">
                            <thead id="idTHead" width="@(DoRongBang)px">
                                <tr>
                                    <th width="@(arrColWidth[0])px" rowspan="4" align="center"><b>Mã Hàng</b></th>
                                    @{
                                        if (ChiCoQuyenDoc == false)
                                        {
                                            <th width="@(arrColWidth[1])px" rowspan="3" align="center"><b>Chỉ tiêu</b></th>
                                        }
                                        else
                                        {
                                            <th width="@(arrColWidth[1])px" rowspan="4" align="center"><b>Chỉ tiêu</b></th>
                                        }
                                    }
                                    @(MvcHtmlString.Create(Hang1))
                                </tr>
                                <tr>@(MvcHtmlString.Create(Hang2))</tr>
                                <tr>@(MvcHtmlString.Create(Hang3))</tr>
                                <tr>
                                    @{
                                        if (ChiCoQuyenDoc == false)
                                        {
                                            <th>&nbsp;</th>
                                        }
                                    }
                                    @(MvcHtmlString.Create(Hang4))
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    for (i = 0; i < dtBangMau_HangMau.Rows.Count; i++)
                                    {
                                        String tgStyle = "";
                                        int cs = arrSTT[i];

                                        if (Convert.ToInt32(dtBangMau_HangMau.Rows[cs]["iHeight"]) > 0 && Convert.ToInt32(dtBangMau_HangMau.Rows[cs]["iHeight"]) != 20)
                                        {
                                            tgStyle += String.Format("height:{0}px;", dtBangMau_HangMau.Rows[cs]["iHeight"]);
                                        }
                                        if (Convert.ToString(dtBangMau_HangMau.Rows[cs]["sBackground"]) != "" && Convert.ToString(dtBangMau_HangMau.Rows[cs]["sBackground"]) != "#ffffff")
                                        {
                                            tgStyle += String.Format("background-color:{0};", dtBangMau_HangMau.Rows[cs]["sBackground"]);
                                        }
                                        if (Convert.ToString(dtBangMau_HangMau.Rows[cs]["sColor"]) != "" && Convert.ToString(dtBangMau_HangMau.Rows[cs]["sColor"]) != "#000000")
                                        {
                                            tgStyle += String.Format("color: {0};", dtBangMau_HangMau.Rows[cs]["sColor"]);
                                        }
                                        if (Convert.ToInt16(dtBangMau_HangMau.Rows[cs]["iFontSize"]) > 0 && Convert.ToInt16(dtBangMau_HangMau.Rows[cs]["iFontSize"]) != 12)
                                        {
                                            tgStyle += String.Format("font-size:{0}px;", dtBangMau_HangMau.Rows[cs]["iFontSize"]);
                                        }
                                        if (Convert.ToBoolean(dtBangMau_HangMau.Rows[cs]["bBold"]))
                                        {
                                            tgStyle += String.Format("font-weight:bold;");
                                        }
                                        if (Convert.ToBoolean(dtBangMau_HangMau.Rows[cs]["bItalic"]))
                                        {
                                            tgStyle += String.Format("font-style:italic;");
                                        }
                                        if (Convert.ToBoolean(dtBangMau_HangMau.Rows[cs]["bUnderline"]))
                                        {
                                            tgStyle += String.Format("text-decoration:underline;");
                                        }

                                        if (tgStyle != "")
                                        {
                                            tgStyle = String.Format(" style=\"{0}\"", tgStyle);
                                        }

                                        <tr @(MvcHtmlString.Create(tgStyle))>
                                            <th>&nbsp;[H@(dtBangMau_HangMau.Rows[cs]["iID_MaHangMau"])]</th>   @*@(i+1)*@
                                            @{
                                                tgStyle = "";
                                                if (Convert.ToBoolean(dtBangMau_HangMau.Rows[cs]["bBold"]) == false)
                                                {
                                                    tgStyle = " style=\"font-weight:normal;\"";
                                                }
                                            }
                                            <th align="left" @(MvcHtmlString.Create(tgStyle))>&nbsp;@(MvcHtmlString.Create(String.Format("{0}{1}", arrXauDauCach[i], Convert.ToString(dtBangMau_HangMau.Rows[cs]["sTenHang"]))))</th>
                                            @{
                                                for (j = 0; j < nC; j++)
                                                {
                                                    <td @(D[cs][j]) ondblclick="GoiSuaO('@(dtBangMau_HangMau.Rows[cs]["iID_MaHangMau"])','@(dtCotMau.Rows[j]["iID_MaCotMau"])');">&nbsp;</td>
                                                }
                                            }
                                        </tr>
                                    }
                                }
                            </tbody>
                            <tfoot width="@(DoRongBang)">
                                <tr>
                                    @{
                                        for (j = 0; j < arrColWidth.Count; j++)
                                        {
                                            if (arrColWidth[j] > 0)
                                            {
                                                <th width="@(arrColWidth[j])px">&nbsp;</th>
                                            }
                                        }
                                    }
                                </tr>
                            </tfoot>
                        </table>
                        <div style="display:none;">
                            <input type="hidden" id="idMaHangMauCha" name="idMaHangMauCha" value="" />
                        </div>
                    </div>
                </div><!-- /.box-body -->
                <div class="box-footer clearfix">
                    @{
                        if (ChiCoQuyenDoc)
                        {
                            <div class="col-xs-6">&nbsp;</div>
                        }
                        else
                        {
                            <div class="col-xs-6">
                                <button class="btn btn-block btn-default" type="button" onclick="javascript:return Bang_HamTruocKhiKetThuc();">Save</button>
                            </div>
                        }
                    }
                    <div class="col-xs-6">
                        <button class="btn btn-block btn-default" type="button" onclick="javascript:history.go(-1)">Cancel</button>
                    </div>
                </div>
            </div>
        </div><!-- /.col -->
    </div><!-- /.row -->
</section><!-- /.content -->
@{
    dtCotMau.Dispose();
    dtCongThuc.Dispose();
    dtHangMau.Dispose();
    dtBangMau_HangMau.Dispose();
    dtBangMau.Dispose();
}
<div style="display:none">
    @{
        if (ChiCoQuyenDoc == false)
        {
            using (Html.BeginForm("CreateSubmit", "BangMauDinhDang", new { MaBangMau = MaBangMau }))
            {
                <input type="hidden" id="idXauGiaTriChiTiet" name="idXauGiaTriChiTiet" value="@(XauGiaTriChiTiet)" />
                <input type="hidden" id="idXauMaCacCot" name="idXauMaCacCot" value="@(XauMaCacCot)" />
                <input type="hidden" id="idXauMaCacHang" name="idXauMaCacHang" value="@(XauMaCacHang)" />
                <input type="submit" id="btnXacNhanGhi" value="XN" />
            }
        }
        else
        {
            <input type="hidden" id="idXauGiaTriChiTiet" value="@(XauGiaTriChiTiet)" />
            <input type="hidden" id="idXauMaCacCot" value="@(XauMaCacCot)" />
            <input type="hidden" id="idXauMaCacHang" value="@(XauMaCacHang)" />
        }
    }
    <input type="hidden" id="idXauKieuDuLieu" value="@(XauKieuDuLieu)" />
    <input type="hidden" id="txtXauMucCuaHang" value="@(XauMucCuaHang)" />
</div>
<script type="text/javascript">
    Bang_DauCachHang = '@(BangModels.DauCachHang)';
    Bang_DauCachO = '@(BangModels.DauCachO)';
    BangDuLieu_h0 = 4;
    BangDuLieu_c0 = @(nColWidth);
    BangDuLieu_nH = @(nH);
    BangDuLieu_nC = @(nC);
    $(document).ready(Bang_Ready);

    function GoiSuaO(MaHang, MaCot) {
        var url = unescape('@MvcHtmlString.Create(Url.Action("Create?MaBangMau=#0&MaPhongBan=#1", "BangMauDinhDang"))');
        url = unescape(url.replace("#0", @(MaBangMau)));
        url = unescape(url.replace("#1", @(MaPhongBan)));

        url += "&MaHangMau=" + MaHang + "&MaCotMau=" + MaCot;
        location.href = url;
    }
</script>